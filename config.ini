[camera]
; index is usually 0 unless you have multiple webcams.
index = 1
; width and height are ignored for video files.
width = 640
height = 480
; set FPS to -1 to capture as fast as camera will allow.
fps = 30
; file = /tmp/sd/flight_1435671703.48.mp4
; file = /tmp/sd/flight_1435933737.8.mp4
; file = /windows/Dropbox/Aber/MSc_Dissertation/data/synthetic_targets-3.mp4
; file = /everything/quad_data/markers/rescaled_64/%04d.png
file = none

[gui]
; if headless, no GUI is shown at all.
headless = false
; if saveToFiles is true, save gui window contents as .jpg images.
; only works if headless is false.
saveToFiles = false
; saves the webcam input to /tmp/target.png.
saveTmp = false
; if a value other than none, record the output to this file.
saveVideo = /everything/quad_data/from_sd/orig_tracker.mp4
saveVideoFPS = 30
; show intermediate processing steps in GUI.
showProcessed = false
; how long to wait for key input (to advance frame by frame).
; -1 is forever, 0 is not at all, >=1 is time in milliseconds.
waitKey = 1

[tracker]
; mode is cascade or normal
mode = cascade
; convert to greyscale image or not? (probably breaks thresholding to set false.)
grey = false

[threshold]
; mode can be none, fixed, otsu, mean or gaussian
mode = none
; only fixed thresholding uses this value.
value = 220
; see openCV docs on adaptiveThreshold function for explanation of these values.
kernel_size = 9
c = 0

[cascade]
xml = /home/owain/Dropbox/Aber/MSc_Dissertation/code/QuadTargetPP/cascade_64.xml
scaleFactor = 1.5
minNeighbors = 2
minSize = 3

[params]
center_elliptical_ratio = 0.33
center_distances_ratio = 0.6
min_distance_ratio = 0.6
max_distance_ratio = 1.6666666666667
target_size_ratio = 0.5
min_target_size_ratio = 0.5
max_target_size_ratio = 2.0
lr_pair_ratio_threshold = 0.7
pair_center_ratio_threshold = 0.3
lr_ratio_threshold = 0.5
lr_black_to_center_ratio_threshold = 0.3
valid_rows_to_center_ratio = 0.0
contrast = 0.0
decay_rate = 0.1
sample_every = 0.0333
update_every = 0.1
